name: "Build and Copy"
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: check java version
        run: java --version


      - name: Build with gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Archive the jar
        run: |
          mkdir -p target/deploy
          cp build/libs/demo-0.0.1-SNAPSHOT.jar target/deploy/demo.jar

      - uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/deploy/demo.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:

      - uses: actions/download-artifact@v4
        with:
          name: jar
          path: .
      - name: Add SSH known hosts
        run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      - name: Deploy to server using SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "ðŸš€ Deployment started"
            # copy file from runner to remote
            scp -P ${{ secrets.SSH_PORT }} demo.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEST_DIR }}/demo.jar
          
## move into place on remote with sudo
#            ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} \
#            "sudo mv /tmp/demo.jar ${{ secrets.DEST_DIR }}/demo.jar && sudo chown root:root ${{ secrets.DEST_DIR }}/demo.jar"
#            echo "âœ… Deployment completed"
