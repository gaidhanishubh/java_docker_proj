name: "Build and Copy"
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: buildProd
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: gradle

      - name: check java version
        run: java --version


      - name: Build with gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build

      - name: Archive the jar
        run: |
          mkdir -p target/deploy
          cp build/libs/demo-0.0.1-SNAPSHOT.jar target/deploy/demo.jar

      - uses: actions/upload-artifact@v4
        with:
          name: jar
          path: target/deploy/demo.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: deployProd
    steps:

      - uses: actions/download-artifact@v4
        with:
          name: jar
          path: .

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          echo "ðŸš€ Deployment started"
          scp -P ${{ secrets.SSH_PORT }} demo.jar ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.DEST_DIR }}/demo.jar
          
          # move into place on remote with sudo
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "
          set -e
          BACKUP_DIR=/root/backup/$(date +%F)
          sudo mkdir -p \$BACKUP_DIR
          sudo cp /root/modem/demo.jar \$BACKUP_DIR/
          echo "stopping the service"
          sudo systemctl stop demo.jar
          sudo rm -f  /root/modem/demo.jar
          sudo mv ${{ secrets.DEST_DIR }}/demo.jar /root/modem/
          sudo chown root:root /root/modem/demo.jar
          echo 'Waiting 15 seconds before restart...'
          sleep 15
          echo "starting the service"
          sudo systemctl start demo.service
          echo "âœ… Deployment completedd"
          "




#####################
# 1> create and copy pub and private key
# 2> add private key in github
# 3> add public ket to authorized keys on remote server
#ssh-keygen -t ed25519 -C "github-action-key"

# adding pub key on remote server.
#echo "ssh-ed25519 AAAAC3NzaC1lfhtgfhghE5AAAAIPFI+QIwtkAclAtdfhM8qMIsZBwAcJWirblPk/MAfp0i github-action-key" >> ~/.ssh/authorized_keys

#####################
